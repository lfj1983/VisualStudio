<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>S7ModbusDriver</name>
  </assembly>
  <members>
    <member name="N:S7ModbusDriver">
    </member>
    <member name="T:S7ModbusDriver.PackISeatStatus">
    </member>
    <member name="P:S7ModbusDriver.PackISeatStatus.Cmd_run_status_seat">
      <summary>
打包机是否运行</summary>
    </member>
    <member name="P:S7ModbusDriver.PackISeatStatus.Cmd_download_finish_seat">
      <summary>
打包机是否接料完成</summary>
    </member>
    <member name="P:S7ModbusDriver.PackISeatStatus.Cmd_error_seat">
      <summary>
打包机是否故障</summary>
    </member>
    <member name="P:S7ModbusDriver.PackISeatStatus.Cmd_entry_seat">
      <summary>
打包机样桶是否进入到入口</summary>
    </member>
    <member name="P:S7ModbusDriver.PackISeatStatus.Cmd_down_seat">
      <summary>
打包机样桶是否停靠到卸料位置</summary>
    </member>
    <member name="P:S7ModbusDriver.PackISeatStatus.Cmd_pack1_seat">
      <summary>
打包机样桶是否停靠到第一次压盖位置</summary>
    </member>
    <member name="P:S7ModbusDriver.PackISeatStatus.Cmd_rfid_seat">
      <summary>
打包机RFID读卡器是否到位</summary>
    </member>
    <member name="P:S7ModbusDriver.PackISeatStatus.Cmd_pack2_seat">
      <summary>
打包机二次压盖是否完成</summary>
    </member>
    <member name="T:S7ModbusDriver.PackVSeatStatus">
    </member>
    <member name="P:S7ModbusDriver.PackVSeatStatus.Cmd_run_origin_seat">
    </member>
    <member name="P:S7ModbusDriver.PackVSeatStatus.Cmd_run_first_seat">
    </member>
    <member name="P:S7ModbusDriver.PackVSeatStatus.Cmd_run_two_seat">
    </member>
    <member name="P:S7ModbusDriver.PackVSeatStatus.Cmd_run_entry_seat">
    </member>
    <member name="P:S7ModbusDriver.PackVSeatStatus.Cmd_entry_bucket_seat">
    </member>
    <member name="P:S7ModbusDriver.PackVSeatStatus.Cmd_cap_seat">
    </member>
    <member name="P:S7ModbusDriver.PackVSeatStatus.Cmd_bucket_cap_seat">
    </member>
    <member name="P:S7ModbusDriver.PackVSeatStatus.Cmd_error_seat">
      <summary>
是否有预定义异常</summary>
    </member>
    <member name="T:S7ModbusDriver.S7MsCmd">
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetFuncIndex">
      <summary>
获取功能码的索引</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetCmdLength">
      <summary>
获取命令的长度</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetDataLength">
      <summary>
获取数据长度</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetHeaderLength">
      <summary>
获取标志位的长度</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetOutCmd">
      <summary>
获取输出命令</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetInCmd">
      <summary>
获取输入命令</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetResetCmd(System.Int32)">
      <summary>
获取复位命令</summary>
      <param name="addr">
</param>
    </member>
    <member name="P:S7ModbusDriver.S7MsCmd.DeviceAddrIndex">
      <summary>
获取设备地址的索引</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetWriteDataIndex">
      <summary>
写入数据的索引</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetWriteVDataIndex">
    </member>
    <member name="P:S7ModbusDriver.S7MsCmd.ReadDataIndex">
      <summary>
读数据的索引</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetCallQIReadDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetCallVReadDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetErrorCodeIndex">
      <summary>
错误码的索引</summary>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetControlCmd(System.Byte[])">
      <summary>
设备控制的基本命令的拼接</summary>
      <param name="args">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetOutReadCmd(System.Int32,System.Int32)">
      <summary>
获取输出端读的命令</summary>
      <param name="addr">
</param>
      <param name="port">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetInReadCmd(System.Int32,System.Int32)">
      <summary>
获取输入端读的命令</summary>
      <param name="addr">
</param>
      <param name="port">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.GetControlCmd(System.Int32,System.Int32,System.Int32)">
      <summary>
获取控制命令</summary>
      <param name="addr">
设备地址</param>
      <param name="port">
</param>
      <param name="value">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmd.Format16Bytes(System.String)">
      <param name="hexString">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsCmdInterface`1.GetWriteDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsCmdInterface`1.GetWriteVDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsCmdInterface`1.GetErrorCodeIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsCmdInterface`1.GetCallQIReadDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsCmdInterface`1.GetCallVReadDataIndex">
    </member>
    <member name="T:S7ModbusDriver.S7MSEventArgs">
    </member>
    <member name="P:S7ModbusDriver.S7MSEventArgs.S7FuncCmd">
      <summary>
功能码命令</summary>
    </member>
    <member name="P:S7ModbusDriver.S7MSEventArgs.S7Value">
    </member>
    <member name="P:S7ModbusDriver.S7MSEventArgs.S7InSeat">
      <summary>
输入端点位</summary>
    </member>
    <member name="P:S7ModbusDriver.S7MSEventArgs.S7VInSeat">
      <summary>
VW输入点位</summary>
    </member>
    <member name="P:S7ModbusDriver.S7MSEventArgs.S7VOutSeat">
      <summary>
VW输出点位</summary>
    </member>
    <member name="P:S7ModbusDriver.S7MSEventArgs.S7OutSeat">
      <summary>
输入端点位</summary>
    </member>
    <member name="P:S7ModbusDriver.S7MSEventArgs.S7Error">
      <summary>
执行错误</summary>
    </member>
    <member name="P:S7ModbusDriver.S7MSEventArgs.S7RunError">
      <summary>
运行故障</summary>
    </member>
    <member name="T:S7ModbusDriver.S7MSHandle`1">
    </member>
    <member name="M:S7ModbusDriver.S7MSHandle`1.#ctor">
    </member>
    <member name="M:S7ModbusDriver.S7MSHandle`1.DecodeData(System.Byte[])">
      <summary>
解析数据</summary>
      <param name="data">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MSHandle`1.GetCmdContext">
      <summary>
继承上下文</summary>
    </member>
    <member name="T:S7ModbusDriver.S7MsVWCmd">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetFuncIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetCmdLength">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetDataLength">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetHeaderLength">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetOutCmd">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetInCmd">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetResetCmd(System.Int32)">
      <param name="addr">
</param>
    </member>
    <member name="P:S7ModbusDriver.S7MsVWCmd.DeviceAddrIndex">
    </member>
    <member name="P:S7ModbusDriver.S7MsVWCmd.ReadDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetCallQIReadDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetCallVReadDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetWriteDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetWriteVDataIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetErrorCodeIndex">
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetControlCmd(System.Byte[])">
      <param name="args">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetOutReadCmd(System.Int32,System.Int32)">
      <param name="addr">
</param>
      <param name="port">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetInReadCmd(System.Int32,System.Int32)">
      <param name="addr">
</param>
      <param name="port">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.GetControlCmd(System.Int32,System.Int32,System.Int32)">
      <param name="addr">
</param>
      <param name="port">
</param>
      <param name="value">
</param>
    </member>
    <member name="M:S7ModbusDriver.S7MsVWCmd.Format16Bytes(System.String)">
      <param name="hexString">
</param>
    </member>
  </members>
</doc>
