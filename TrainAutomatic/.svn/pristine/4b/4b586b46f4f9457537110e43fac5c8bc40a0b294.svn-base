<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>DevicesControl</name>
  </assembly>
  <members>
    <member name="N:DevicesControl">
    </member>
    <member name="T:DevicesControl.Carriage">
      <summary>
列车车厢</summary>
    </member>
    <member name="M:DevicesControl.Carriage.#ctor">
    </member>
    <member name="T:DevicesControl.IO8Port">
      <summary>
IO8Port.xaml 的交互逻辑</summary>
    </member>
    <member name="P:DevicesControl.IO8Port.Count">
      <summary>
绑定一个Count属性</summary>
    </member>
    <member name="E:DevicesControl.IO8Port.CountChanged">
      <summary>
Count的改变事件</summary>
    </member>
    <member name="P:DevicesControl.IO8Port.InPorts">
      <summary>
绑定InPorts属性</summary>
    </member>
    <member name="E:DevicesControl.IO8Port.InPortsChanged">
      <summary>
InPorts的改变事件</summary>
    </member>
    <member name="P:DevicesControl.IO8Port.OutPorts">
      <summary>
绑定OutPorts属性</summary>
    </member>
    <member name="E:DevicesControl.IO8Port.OutPortsChanged">
      <summary>
OutPorts的改变事件</summary>
    </member>
    <member name="P:DevicesControl.IO8Port.Io8Serial">
    </member>
    <member name="E:DevicesControl.IO8Port.Io8SerialChanged">
      <summary>
Io8Serial的改变事件</summary>
    </member>
    <member name="P:DevicesControl.IO8Port.Address">
      <summary>
获取或设置板子的地址属性</summary>
    </member>
    <member name="E:DevicesControl.IO8Port.AddressChanged">
      <summary>
设备访问地址改变事件</summary>
    </member>
    <member name="P:DevicesControl.IO8Port.ListenerInterval">
      <summary>
获取或设置监听计时器的时间间隔</summary>
    </member>
    <member name="E:DevicesControl.IO8Port.ListenerIntervalChanged">
      <summary>
监听计时器时间间隔改变事件</summary>
    </member>
    <member name="P:DevicesControl.IO8Port.Msg">
      <summary>
获取或设置消息</summary>
    </member>
    <member name="E:DevicesControl.IO8Port.MsgChanged">
      <summary>
消息内容改变事件</summary>
    </member>
    <member name="E:DevicesControl.IO8Port.ExceptionEvent">
      <summary>
异常事件</summary>
    </member>
    <member name="M:DevicesControl.IO8Port.#ctor">
    </member>
    <member name="M:DevicesControl.IO8Port.InitInports(System.Byte[])">
      <summary>
对Inports初始化</summary>
      <param name="data">
</param>
    </member>
    <member name="M:DevicesControl.IO8Port.InitOutports(System.Byte[])">
      <summary>
对Outports初始化（与上面对应）</summary>
      <param name="data">
</param>
    </member>
    <member name="M:DevicesControl.IO8Port.GetInStatus(System.Int32)">
      <summary>
获取输入的状态</summary>
      <param name="portnumber">
</param>
    </member>
    <member name="M:DevicesControl.IO8Port.GetOutStatus(System.Int32)">
      <summary>
获取输出的状态</summary>
      <param name="portnumber">
</param>
    </member>
    <member name="M:DevicesControl.IO8Port.Start">
      <summary>
计时器开始</summary>
    </member>
    <member name="M:DevicesControl.IO8Port.Stop">
      <summary>
计时器停止</summary>
    </member>
    <member name="M:DevicesControl.IO8Port.SenderTimer_tick(System.Object,System.EventArgs)">
      <summary>
定义 DispatcherTime_tick事件</summary>
      <param name="sender">
</param>
      <param name="e">
</param>
    </member>
    <member name="M:DevicesControl.IO8Port.SendCmd">
    </member>
    <member name="M:DevicesControl.IO8Port.Open">
      <summary>
m_io8Port串口打开</summary>
    </member>
    <member name="M:DevicesControl.IO8Port.Close">
      <summary>
m_io8Port串口关闭</summary>
    </member>
    <member name="M:DevicesControl.IO8Port.Out(System.Int32,System.Int32)">
      <summary>
定义Out方法</summary>
      <param name="port">
</param>
      <param name="cmd">
</param>
    </member>
    <member name="M:DevicesControl.IO8Port.Port_Click(System.Object)">
      <summary>
定义Port_Click事件</summary>
      <param name="sender">
</param>
    </member>
    <member name="T:DevicesControl.IOPort">
      <summary>
IOPort.xaml 的交互逻辑</summary>
    </member>
    <member name="P:DevicesControl.IOPort.Status">
    </member>
    <member name="E:DevicesControl.IOPort.StatusChanged">
    </member>
    <member name="E:DevicesControl.IOPort.Click">
    </member>
    <member name="M:DevicesControl.IOPort.#ctor">
    </member>
    <member name="T:DevicesControl.IVT9010">
      <summary>
IVT9010.xaml 的交互逻辑</summary>
    </member>
    <member name="P:DevicesControl.IVT9010.IVT9010Serial">
      <summary>
绑定SerialEntity属性</summary>
    </member>
    <member name="P:DevicesControl.IVT9010.Address">
      <summary>
绑定设备的地址属性</summary>
    </member>
    <member name="E:DevicesControl.IVT9010.IVT9010SerialChanged">
      <summary>
IVT9010Serial的改变事件</summary>
    </member>
    <member name="E:DevicesControl.IVT9010.AddressChanged">
      <summary>
地址改变事件</summary>
    </member>
    <member name="E:DevicesControl.IVT9010.ReadTaged">
      <summary>
读标签事件</summary>
    </member>
    <member name="E:DevicesControl.IVT9010.WriteSuccessed">
      <summary>
写标签事件</summary>
    </member>
    <member name="P:DevicesControl.IVT9010.Msg">
      <summary>
获取或设置消息</summary>
    </member>
    <member name="E:DevicesControl.IVT9010.MsgChanged">
      <summary>
消息内容改变事件</summary>
    </member>
    <member name="E:DevicesControl.IVT9010.ExceptionEvent">
      <summary>
异常事件</summary>
    </member>
    <member name="P:DevicesControl.IVT9010.TimeOutInterval">
      <summary>
获取或设置命令超时时间</summary>
    </member>
    <member name="E:DevicesControl.IVT9010.TimeOutIntervalChanged">
      <summary>
命令超间隔改变事件</summary>
    </member>
    <member name="P:DevicesControl.IVT9010.RunLock">
      <summary>
是否锁定状态，只有CmdLock等于false时，才可以向PLC发送命令</summary>
    </member>
    <member name="M:DevicesControl.IVT9010.#ctor">
    </member>
    <member name="M:DevicesControl.IVT9010.TimeOutStop">
    </member>
    <member name="M:DevicesControl.IVT9010.TimeOutStart">
    </member>
    <member name="M:DevicesControl.IVT9010.WriteTag(System.String)">
      <param name="Tag">
</param>
    </member>
    <member name="M:DevicesControl.IVT9010.ReadTag(System.String)">
      <param name="password">
</param>
    </member>
    <member name="T:DevicesControl.NumberInfo">
      <summary>
TrainNumber.xaml 的交互逻辑</summary>
    </member>
    <member name="P:DevicesControl.NumberInfo.Number">
    </member>
    <member name="M:DevicesControl.NumberInfo.#ctor">
    </member>
    <member name="T:DevicesControl.PackHandler">
      <summary>
PackHandler.xaml 的交互逻辑</summary>
    </member>
    <member name="M:DevicesControl.PackHandler.#ctor">
    </member>
    <member name="T:DevicesControl.PackMachine">
      <summary>
打包皮带</summary>
    </member>
    <member name="P:DevicesControl.PackMachine.PackBucket">
      <summary>
当前打包样桶信息</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.PackBucketChanged">
      <summary>
打包桶改变事件</summary>
    </member>
    <member name="P:DevicesControl.PackMachine.PLCAddress">
    </member>
    <member name="P:DevicesControl.PackMachine.RFIDAddress">
    </member>
    <member name="P:DevicesControl.PackMachine.S7MSerial">
      <summary>
获取或设置PLC200设备连接参数</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.S7MSerialChanged">
    </member>
    <member name="P:DevicesControl.PackMachine.RfidSerial">
      <summary>
获取或设置读卡器连接参数</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.RfidSerialChanged">
    </member>
    <member name="P:DevicesControl.PackMachine.Msg">
      <summary>
获取或设置消息</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.MsgChanged">
      <summary>
消息内容改变事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.ExceptionEvent">
      <summary>
异常事件</summary>
    </member>
    <member name="P:DevicesControl.PackMachine.ListenerInterval">
      <summary>
获取或设置监听间隔</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.ListenerIntervalChanged">
      <summary>
定义获取或设置监听间隔的改变事件</summary>
    </member>
    <member name="P:DevicesControl.PackMachine.PLCListenerInterval">
      <summary>
绑定PLC监听间隔属性</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.PLCListenerIntervalChanged">
      <summary>
声明PLCListenerIntervalProperty的改变事件</summary>
    </member>
    <member name="P:DevicesControl.PackMachine.PackStatusInfo">
      <summary>
打包机状态信息</summary>
    </member>
    <member name="P:DevicesControl.PackMachine.S7MSArgs">
      <summary>
PLC反馈信息</summary>
    </member>
    <member name="P:DevicesControl.PackMachine.StatusCmds">
      <summary>
获取或设置监控状态命令</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.OriginSeat">
      <summary>
打包机运行事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.PackStop">
      <summary>
打包机停止事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.BucketEntrySeat">
      <summary>
打包样桶进入打包机事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.BucketDownSeat">
      <summary>
打包机停到卸料位</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.BucketPackFirstSeat">
      <summary>
打包机停到第一次压盖位</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.RfidSeat">
      <summary>
读卡器到位事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.BucketPackTwoSeat">
      <summary>
第二次压盖完成事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.CapSeat">
      <summary>
打包机有瓶盖事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.NoneCap">
      <summary>
打包机无瓶盖可用事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.BcketCapSeat">
      <summary>
有压过瓶盖的样桶进入进口区</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.UnBcketCapSeat">
      <summary>
无压过瓶盖的样桶进入进口区</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.RunEntrySeat">
      <summary>
打包机转到进桶口</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.RunError">
      <summary>
打包机PLC运行时异常</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.RunSuccessed">
      <summary>
启动打包机成功</summary>
    </member>
    <member name="P:DevicesControl.PackMachine.Packing">
      <summary>
获取是否正在打包煤样</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.WriteTaged">
      <summary>
写卡完成事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.ReadTaged">
      <summary>
读卡完成事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.PackFinish">
      <summary>
本次打包完成事件</summary>
    </member>
    <member name="E:DevicesControl.PackMachine.RFIDReciveSuccess">
    </member>
    <member name="E:DevicesControl.PackMachine.ResetDownload">
    </member>
    <member name="P:DevicesControl.PackMachine.OffLine">
    </member>
    <member name="E:DevicesControl.PackMachine.OffLineChanged">
    </member>
    <member name="M:DevicesControl.PackMachine.#ctor">
    </member>
    <member name="M:DevicesControl.PackMachine.RunPack">
      <summary>
启动打包机</summary>
    </member>
    <member name="M:DevicesControl.PackMachine.StopPack">
      <summary>
停止打包机</summary>
    </member>
    <member name="M:DevicesControl.PackMachine.RFIDRecive">
    </member>
    <member name="M:DevicesControl.PackMachine.ResetDownloadSeat">
    </member>
    <member name="M:DevicesControl.PackMachine.DownloadRecive">
      <summary>
采样机卸料完成，控制打包机转盘继续转动</summary>
    </member>
    <member name="M:DevicesControl.PackMachine.StartPackBucket(Entities.BucketEntity)">
      <summary>
开始打包</summary>
      <param name="bucket">
</param>
    </member>
    <member name="M:DevicesControl.PackMachine.StartListener">
    </member>
    <member name="M:DevicesControl.PackMachine.StopListener">
      <summary>
停止监听</summary>
    </member>
    <member name="M:DevicesControl.PackMachine.S7MSEventArgsToStatus(S7ModbusDriver.S7MSEventArgs,System.Object)">
      <param name="source">
</param>
      <param name="entity">
</param>
    </member>
    <member name="M:DevicesControl.PackMachine.WriteBucket">
      <summary>
给采样桶写入标签</summary>
    </member>
    <member name="T:DevicesControl.S7MS200">
      <summary>
S7MSDevice.xaml 的交互逻辑</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.S7MS">
      <summary>
获取或设置设备连接参数</summary>
    </member>
    <member name="E:DevicesControl.S7MS200.S7MSChanged">
      <summary>
设备的改变事件</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.TimeOutInterval">
      <summary>
获取或设置命令超时时间</summary>
    </member>
    <member name="E:DevicesControl.S7MS200.TimeOutIntervalChanged">
      <summary>
命令超间隔改变事件</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.ListenerInterval">
      <summary>
获取或设置监听间隔</summary>
    </member>
    <member name="E:DevicesControl.S7MS200.ListenerIntervalChanged">
    </member>
    <member name="P:DevicesControl.S7MS200.ListenerVW_InQueue">
      <summary>
VW区域输入点位队列</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.ListenerVW_OutQueue">
      <summary>
VW区域输出点位队列</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.ListenerInQueue">
      <summary>
输入端点位队列</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.ListenerOutQueue">
      <summary>
输出端点全队列</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.CurrentArgs">
      <summary>
获取或设置当前正在执行的命令</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.RunLock">
      <summary>
是否锁定状态，只有CmdLock等于false时，才可以向PLC发送命令</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.Address">
      <summary>
设备地址</summary>
    </member>
    <member name="P:DevicesControl.S7MS200.Msg">
      <summary>
获取或设置消息</summary>
    </member>
    <member name="E:DevicesControl.S7MS200.MsgChanged">
      <summary>
消息内容改变事件</summary>
    </member>
    <member name="E:DevicesControl.S7MS200.ExceptionEvent">
      <summary>
异常事件</summary>
    </member>
    <member name="E:DevicesControl.S7MS200.Success">
    </member>
    <member name="E:DevicesControl.S7MS200.Failed">
    </member>
    <member name="M:DevicesControl.S7MS200.#ctor">
    </member>
    <member name="M:DevicesControl.S7MS200.GetVW_InCount">
      <summary>
获取VW区域队列大小</summary>
    </member>
    <member name="M:DevicesControl.S7MS200.GetVW_OutCount">
    </member>
    <member name="M:DevicesControl.S7MS200.GetOutCount">
      <summary>
获取输出命令队列长度</summary>
    </member>
    <member name="M:DevicesControl.S7MS200.QuickOut(S7ModbusDriver.S7QSeat,S7ModbusDriver.S7OffOn)">
      <summary>
快速执行输出命令</summary>
      <param name="seat">
点位</param>
      <param name="cmd">
值</param>
    </member>
    <member name="M:DevicesControl.S7MS200.QuickOut(System.Int32,System.Int32)">
      <summary>
快速执行输出命令</summary>
      <param name="seat">
点位</param>
      <param name="cmd">
值</param>
    </member>
    <member name="M:DevicesControl.S7MS200.QuickIn(System.Int32)">
      <param name="seat">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.QuickVIn(System.Int32)">
      <param name="seat">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.QuickVOut(S7ModbusDriver.S7VOutSeat,S7ModbusDriver.S7OffOn)">
      <param name="seat">
</param>
      <param name="cmd">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.QuikVOut(System.Int32,System.Int32)">
      <param name="seat">
</param>
      <param name="cmd">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.GetInCount">
      <summary>
获取输入命令队列长度</summary>
    </member>
    <member name="M:DevicesControl.S7MS200.AddISeat(S7ModbusDriver.S7ISeat)">
      <param name="seat">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.AddQSeat(S7ModbusDriver.S7QSeat,S7ModbusDriver.S7OffOn)">
      <param name="seat">
</param>
      <param name="value">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.AddQ(System.Byte,System.Byte)">
      <param name="port">
</param>
      <param name="value">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.AddI(System.Byte)">
      <param name="port">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.AddVIn(System.Byte)">
      <param name="port">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.AddVOut(System.Byte,System.Byte)">
      <param name="port">
</param>
      <param name="value">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.AddVInSeat(S7ModbusDriver.S7VInSeat)">
      <param name="seat">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.AddVOutSeat(S7ModbusDriver.S7VOutSeat,S7ModbusDriver.S7OffOn)">
      <param name="seat">
</param>
      <param name="value">
</param>
    </member>
    <member name="M:DevicesControl.S7MS200.Start">
      <summary>
计时器开始</summary>
    </member>
    <member name="M:DevicesControl.S7MS200.Stop">
      <summary>
计时器停止</summary>
    </member>
    <member name="M:DevicesControl.S7MS200.TimeOutStop">
    </member>
    <member name="M:DevicesControl.S7MS200.TimeOutStart">
    </member>
    <member name="M:DevicesControl.S7MS200.Clear">
    </member>
    <member name="T:DevicesControl.SamMachine">
      <summary>
SamMachine.xaml 的交互逻辑</summary>
    </member>
    <member name="M:DevicesControl.SamMachine.#ctor">
    </member>
    <member name="M:DevicesControl.SamMachine.PlaySam">
    </member>
    <member name="M:DevicesControl.SamMachine.StopSam">
    </member>
    <member name="M:DevicesControl.SamMachine.PlayPackEntrySeat">
    </member>
    <member name="M:DevicesControl.SamMachine.PlayPackOriginSeat">
    </member>
    <member name="M:DevicesControl.SamMachine.PlayPackFirstSeat">
    </member>
    <member name="M:DevicesControl.SamMachine.PlayPackTwoSeat">
    </member>
    <member name="M:DevicesControl.SamMachine.PlayPackOutSeat">
    </member>
    <member name="T:DevicesControl.SensorNode">
      <summary>
对射传感器节点</summary>
    </member>
    <member name="P:DevicesControl.SensorNode.NodeHeight">
      <summary>
获取或设置单个传感器的显示高度</summary>
    </member>
    <member name="E:DevicesControl.SensorNode.NodeHeightChanged">
    </member>
    <member name="P:DevicesControl.SensorNode.Node1Visibility">
      <summary>
获取或设置第一个传感器节点显示状态</summary>
    </member>
    <member name="E:DevicesControl.SensorNode.Node1VisibilityChanged">
    </member>
    <member name="P:DevicesControl.SensorNode.Node2Visibility">
      <summary>
获取或设置第2个传感器节点显示状态</summary>
    </member>
    <member name="E:DevicesControl.SensorNode.Node2VisibilityChanged">
    </member>
    <member name="M:DevicesControl.SensorNode.#ctor">
    </member>
    <member name="T:DevicesControl.STR2RFID">
      <summary>
STR2RFID读卡器控件</summary>
    </member>
    <member name="P:DevicesControl.STR2RFID.STR2">
      <summary>
获取或设置读卡器配置参数</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.STR2Changed">
      <summary>
读卡器配置参数改变事件</summary>
    </member>
    <member name="P:DevicesControl.STR2RFID.Msg">
      <summary>
获取或设置消息</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.MsgChanged">
      <summary>
消息内容改变事件</summary>
    </member>
    <member name="P:DevicesControl.STR2RFID.ValidCnt">
      <summary>
获取或设置标签验证次数</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.ValidCntChanged">
      <summary>
标签验证次数改变事件</summary>
    </member>
    <member name="P:DevicesControl.STR2RFID.TagValidSql">
      <summary>
获取或设置标签验证SQL</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.TagValidSqlChanged">
      <summary>
验证SQL语句改变事件</summary>
    </member>
    <member name="P:DevicesControl.STR2RFID.ValidConnect">
      <summary>
获取或设置验证数据源连接</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.ValidConnectChanged">
      <summary>
标签验证数据源连接字符改变事件</summary>
    </member>
    <member name="P:DevicesControl.STR2RFID.ValidMinSuttle">
      <summary>
获取或设置验证车辆净重下限</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.ValidMinSuttleChanged">
      <summary>
车辆净重下限改变事件</summary>
    </member>
    <member name="P:DevicesControl.STR2RFID.Status">
      <summary>
获取或设置STR2运行状态</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.StatusChanged">
      <summary>
运行状态改变事件</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.ValidSuccess">
      <summary>
验证成功事件</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.ValidFailed">
      <summary>
验证失败事件</summary>
    </member>
    <member name="E:DevicesControl.STR2RFID.ExceptionEvent">
      <summary>
异常事件</summary>
    </member>
    <member name="P:DevicesControl.STR2RFID.Address">
    </member>
    <member name="E:DevicesControl.STR2RFID.AddressChanged">
    </member>
    <member name="M:DevicesControl.STR2RFID.#ctor">
    </member>
    <member name="M:DevicesControl.STR2RFID.StartRead">
      <summary>
开始读取标签</summary>
    </member>
    <member name="M:DevicesControl.STR2RFID.Pause">
      <summary>
暂停接收标签</summary>
    </member>
    <member name="M:DevicesControl.STR2RFID.Recover">
      <summary>
恢复接收标签</summary>
    </member>
    <member name="M:DevicesControl.STR2RFID.StopRead">
      <summary>
停止读取标签</summary>
    </member>
    <member name="M:DevicesControl.STR2RFID.SetValidConnect(System.String)">
      <summary>
设置验证标签数据源连接字符串</summary>
      <param name="connect">
</param>
    </member>
    <member name="M:DevicesControl.STR2RFID.SetValidMinSuttle(System.Double)">
      <summary>
设置车辆净重下限</summary>
      <param name="minSuttle">
</param>
    </member>
    <member name="M:DevicesControl.STR2RFID.Close">
      <summary>
关闭串口事件。</summary>
    </member>
  </members>
</doc>
